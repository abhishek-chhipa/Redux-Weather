{"version":3,"sources":["components/Form.jsx","actions/index.js","components/WeatherCard.jsx","components/ToggleTheme.jsx","App.jsx","reducers/placeReducer.js","reducers/placeDataReducer.js","reducers/themeReducer.js","reducers/index.js","store.js","index.js"],"names":["Form","place","useSelector","state","theme","thene","dispatch","useDispatch","className","type","placeholder","value","onChange","e","payload","UpdatePlace","target","onClick","fetch","then","res","json","data","console","log","UpdatePlaceData","WeatherCard","placeData","location","src","current","condition","icon","alt","text","temp_c","name","wind_kph","humidity","precip_mm","ToggleTheme","App","placeReducer","action","placeDataReducer","ThemeReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAkCeA,EA9BF,WACX,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMF,SACrCG,EAAQF,aAAY,SAACC,GAAD,OAAWA,EAAME,SACrCC,EAAWC,cACjB,OACE,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,cAAf,UACE,uBACEC,KAAK,OACLC,YAAY,eACZC,MAAOV,EACPW,SAAU,SAACC,GACTP,ECjBM,SAACL,GACjB,MAAO,CACHQ,KAAK,eACLK,QAAQb,GDcOc,CAAYF,EAAEG,OAAOL,WAGlC,wBACEH,UAAYJ,EAAU,gBAAoB,eAC1Ca,QAAS,WACPX,EChBU,SAACL,GACrB,OAAO,SAACK,GACJY,MAAM,oFAAD,OACuFjB,IAEnFkB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZhB,EAAS,CACLG,KAAM,oBACNK,QAASQ,QDMRG,CAAgBxB,KAH7B,4BEqCKyB,EArDK,WAChB,IAAMC,EAAYzB,aAAY,SAAAC,GAAK,OAAIA,EAAMwB,aACvCvB,EAAQF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAE3C,OACE,qBAAKI,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAWJ,EAAM,YAAY,OAAlC,SACGuB,EAAUC,SACT,gCACE,qBAAKC,IAAKF,EAAUG,QAAQC,UAAUC,KAAMC,IAAI,KAChD,qBAAKzB,UAAU,YAAf,SACGmB,EAAUG,QAAQC,UAAUG,OAE/B,sBAAK1B,UAAU,OAAf,UAAuBmB,EAAUG,QAAQK,OAAzC,UACA,qBAAK3B,UAAU,QAAf,SAAwBmB,EAAUC,SAASQ,OAC3C,qBAAK5B,UAAU,qBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,sBACA,sBAAKA,UAAU,OAAf,UACGmB,EAAUG,QAAQO,SAAU,IAC7B,sBAAM7B,UAAU,OAAhB,wBAGJ,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,sBACA,sBAAKA,UAAU,OAAf,UACGmB,EAAUG,QAAQQ,SACnB,sBAAM9B,UAAU,OAAhB,qBAGJ,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,2BACA,sBAAKA,UAAU,OAAf,UACGmB,EAAUG,QAAQS,UACnB,sBAAM/B,UAAU,OAAhB,6BAOV,0DC3BCgC,MAjBf,WACE,IAAMlC,EAAWC,cACXH,EAAQF,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAC3C,OACE,qBAAKI,UAAU,eAAf,SACE,wBACEA,UAAWJ,EAAQ,gBAAkB,eACrCa,QAAS,WACLX,EFYD,CACHG,KAAM,kBEhBR,SAMGL,EAAQ,OAAS,aCKXqC,MAZf,WACE,IAAMrC,EAAQF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAEzC,OADAmB,QAAQC,IAAIpB,GAEV,sBAAKI,UAAWJ,EAAQ,WAAa,MAArC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,cCRSsC,EAPK,WAAsB,IAArBvC,EAAoB,uDAAZ,GAAGwC,EAAS,uCACrC,MAAmB,iBAAhBA,EAAOlC,KACCkC,EAAO7B,QAEXX,GCGIyC,EAPS,WAAsB,IAArBzC,EAAoB,uDAAZ,GAAGwC,EAAS,uCACzC,MAAmB,sBAAhBA,EAAOlC,KACCkC,EAAO7B,QAEXX,GCGI0C,EAPM,WAAyB,IAAxB1C,EAAuB,wDAAXwC,EAAW,uCACzC,MAAmB,iBAAhBA,EAAOlC,MACEN,EAELA,GCQI2C,EANKC,YAAgB,CAChC9C,MAAOyC,EACPf,UAAWiB,EACXxC,MAAMyC,ICHKG,EAFDC,YAAYH,EAAYI,YAAgBC,MCGtDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAASA,EAAnB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.0db103d0.chunk.js","sourcesContent":["// import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { UpdatePlace, UpdatePlaceData } from \"../actions\";\r\n\r\nconst Form = () => {\r\n  const place = useSelector((state) => state.place);\r\n  const theme = useSelector((state) => state.thene);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"enter a city\"\r\n            value={place}\r\n            onChange={(e) => {\r\n              dispatch(UpdatePlace(e.target.value));\r\n            }}\r\n          />\r\n          <button\r\n            className={(theme) ? (\"btn btn-light\") : (\"btn btn-dark\")}\r\n            onClick={() => {\r\n              dispatch(UpdatePlaceData(place));\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","const UpdatePlace = (place) =>{\r\n    return {\r\n        type:\"UPDATE_PLACE\",\r\n        payload:place\r\n    };\r\n};\r\n\r\nconst UpdatePlaceData = (place) =>{\r\n    return (dispatch)=>{\r\n        fetch(\r\n                `https://api.weatherapi.com/v1/current.json?key=67404348d1ac48ad8e4202155210310&q=${place}`\r\n              )\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                  console.log(data);\r\n                  dispatch({\r\n                      type: \"UPDATE_PLACE_DATA\",\r\n                      payload: data,\r\n                  });\r\n                });\r\n    }\r\n};\r\n\r\nconst toggleTheme = () => {\r\n    return {\r\n        type: \"TOGGLE_THEME\",\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport {UpdatePlace,UpdatePlaceData,toggleTheme};","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst WeatherCard = () => {\r\n    const placeData = useSelector(state => state.placeData);\r\n    const theme = useSelector(state => state.theme);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\" offset-md-4 col-12 col-md-4 weather\">\r\n          <div className={theme?\"card dark\":\"card\"}>\r\n            {placeData.location ? (\r\n              <div>\r\n                <img src={placeData.current.condition.icon} alt=\"\" />\r\n                <div className=\"condition\">\r\n                  {placeData.current.condition.text}\r\n                </div>\r\n                <div className=\"temp\">{placeData.current.temp_c}Â°</div>\r\n                <div className=\"place\">{placeData.location.name}</div>\r\n                <div className=\"container DataCard\">\r\n                  <div className=\"row whp\">\r\n                    <div className=\"col\">\r\n                      <div className=\"title\">Wind Now</div>\r\n                      <div className=\"data\">\r\n                        {placeData.current.wind_kph}{\" \"}\r\n                        <span className=\"unit\">KM/H</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"title\">Humidity</div>\r\n                      <div className=\"data\">\r\n                        {placeData.current.humidity}\r\n                        <span className=\"unit\">%</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"title\">Precipitation</div>\r\n                      <div className=\"data\">\r\n                        {placeData.current.precip_mm}\r\n                        <span className=\"unit\">%</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <h1>place not found</h1>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleTheme } from \"../actions\";\r\n\r\nfunction ToggleTheme() {\r\n  const dispatch = useDispatch();\r\n  const theme = useSelector((state) => state.theme);\r\n  return (\r\n    <div className=\"toggle-theme\">\r\n      <button\r\n        className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\r\n        onClick={() => {\r\n            dispatch(toggleTheme())\r\n        }}\r\n      >\r\n        {theme ? \"Dark\" : \"Light\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToggleTheme;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n// import { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport { useSelector } from \"react-redux\";\nimport ToggleTheme from \"./components/ToggleTheme\";\n\nfunction App() {\n  const theme = useSelector(state => state.theme)\n  console.log(theme);\n  return (\n    <div className={theme ? \"App dark\" : \"App\"}>\n      <ToggleTheme />\n      <Form />\n      <WeatherCard />\n    </div>\n  );\n}\n\nexport default App;\n","const placeReducer =(state = \"\",action)=>{\r\n    if(action.type === \"UPDATE_PLACE\"){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default placeReducer;","const placeDataReducer =(state = {},action)=>{\r\n    if(action.type === \"UPDATE_PLACE_DATA\"){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default placeDataReducer;","const ThemeReducer = (state=false,action) => {\r\n    if(action.type === \"TOGGLE_THEME\"){\r\n        return !state;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default ThemeReducer;","import { combineReducers } from \"redux\";\r\nimport placeReducer from \"./placeReducer\";\r\nimport placeDataReducer from \"./placeDataReducer\";\r\nimport ThemeReducer from \"./themeReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    place: placeReducer,\r\n    placeData: placeDataReducer,\r\n    theme:ThemeReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore,applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}